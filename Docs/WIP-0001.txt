this.dtTrigger.next();
            var myTable = $('#tableId').DataTable();
            
            myTable.clear().rows.add(this.orderedItems).draw();





buildOptions() {

    this.dtOptions = {
      ajax: {
        url: GlobalConstants.API + 'OrderedItems/' + this.currentOrder.Id, dataSrc: ""
      },
      pagingType: 'full_numbers',
      pageLength: 3,
      destroy: true,
      columns: [{
        title: 'Name',
        data: 'currentItem.Name',
        className: 'dt-center'
      },
      {
        title: 'Code',
        data: 'currentItem.Code',
        className: 'dt-center'
      },
      {
        title: 'Price',
        data: 'currentItem.Price',
        className: 'dt-center'
      },
      {
        title: 'Quantity',
        data: 'Quantity',
        className: 'dt-center'
      },
      {
        title: 'Subtotal',
        data: 'Subtotal',
        className: 'dt-center'
      },
      {
        title: 'View',
        render: function (data: any, type: any, full: any) {

          return "<img  id='view' itemId='" + full.Id + "' class='btn view'/ src='assets/icons/view.png' width='24' height='24'>";
        },
        className: 'dt-center'
      }
        , {
        title: 'Edit',
        render: function (data: any, type: any, full: any) {

          return "<img  id='edit' itemId='" + full.Id + "' class='btn edit' src='assets/icons/edit.png' [disabled]='editButtonDisabled'/>";
        },
        className: 'dt-center'
      }
        , {
        title: 'Delete',
        render: function (data: any, type: any, full: any) {
          return "<img  id='delete' itemId='" + full.Id + "' class='btn delete' src='assets/icons/delete.png'/>";
        },
        className: 'dt-center'
      }],
      rowCallback: (row: Node, data: any[] | Object, index: number) => {
        const self = this;
        $('td', row).unbind('click');
        $('td', row).bind('click', () => {
          this.onView((<Item>data).Id);
        });
        return row;
      }
      ,

    }
  }


this.orderedItems = this.data.getOrderedItems(this.currentOrder.Id)
              .pipe(finalize(() => {
                console.log(this.units.length + ' units fetched');
              })).subscribe((orderedItems: OrderedItem[]) => { this.orderedItems =orderedItems; });





  <div class="sqare-btn-container">
    <table>
      <tr>
        <td><input id="add" name="0_0" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_1" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_2" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_3" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_4" type="button" class="square-btn" /></td>
      </tr>
      <tr>
        <td><input id="add" name="0_0" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_1" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_2" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_3" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_4" type="button" class="square-btn" /></td>
      </tr>
      <tr>
        <td><input id="add" name="0_0" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_1" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_2" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_3" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_4" type="button" class="square-btn" /></td>
      </tr>
      <tr>
        <td><input id="add" name="0_0" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_1" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_2" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_3" type="button" class="square-btn" /></td>
        <td><input id="add" name="0_4" type="button" class="square-btn" /></td>
      </tr>
    
    </table>
  </div>
if (this.Id == null) this.Id = uuidv1();
    if (params.Order != null) this.Order = params.Order;
    if (params.Item != null) this.Item = params.Item;
    if (params.Price != null) this.Price = params.Item.Price;
    if (params.Quantity != null) this.Quantity = params.Quantity;
    if (params.Subtotal != null) this.Subtotal = this.Price * this.Quantity;
    this.Remarks = params.Remarks;



console.log('after building table');
        var myTable = $('#tableId').DataTable();
        myTable.clear().rows.add(this.currentOrder.Items).draw();   